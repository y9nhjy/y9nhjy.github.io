{"title":"安卓逆向学习","uid":"a1b73b951b87ac24501931dc56035318","slug":"20230929-Android-Reverse","date":"2023-09-29T07:09:00.000Z","updated":"2023-10-19T13:17:26.938Z","comments":true,"path":"api/articles/20230929-Android-Reverse.json","keywords":null,"cover":null,"content":"<h1 id=\"一、模拟器环境搭建\"><a href=\"#一、模拟器环境搭建\" class=\"headerlink\" title=\"一、模拟器环境搭建\"></a>一、模拟器环境搭建</h1><ul>\n<li><a href=\"https://www.ldmnq.com/\">雷电模拟器</a><ul>\n<li>开启root</li>\n<li>设置System.vmdk可写入</li>\n</ul>\n</li>\n<li><a href=\"https://github.com/topjohnwu/Magisk\">Magisk</a><ul>\n<li>设置Zygisk</li>\n</ul>\n</li>\n<li>LSPosed</li>\n</ul>\n<h1 id=\"二、APK文件结构、双开、汉化、基础修改\"><a href=\"#二、APK文件结构、双开、汉化、基础修改\" class=\"headerlink\" title=\"二、APK文件结构、双开、汉化、基础修改\"></a>二、APK文件结构、双开、汉化、基础修改</h1><p>工具：</p>\n<ul>\n<li><p>教程Demo</p>\n</li>\n<li><p>MT管理器 &#x2F; NP管理器</p>\n</li>\n<li><p>雷电模拟器</p>\n</li>\n<li><p>开发者助手</p>\n</li>\n</ul>\n<h2 id=\"APK结构\"><a href=\"#APK结构\" class=\"headerlink\" title=\"APK结构\"></a>APK结构</h2><ul>\n<li>assets：资源文件（图片、音视频）</li>\n<li>lib：动态链接库so文件</li>\n<li>META-INF：保存应用的签名信息</li>\n<li>res：资源文件（图片，字符串等），以及layout文件</li>\n<li>AndroidMainfest.xml文件：APK的应用清单信息，保护应用的名字，版本，权限，引用库等等</li>\n<li>classes.dex：java字节码，应用运行逻辑</li>\n<li>resources.arsc：二进制资源文件，映射资源和id</li>\n</ul>\n<h2 id=\"双开及原理\"><a href=\"#双开及原理\" class=\"headerlink\" title=\"双开及原理\"></a>双开及原理</h2><ul>\n<li>修改包名</li>\n<li>修改Frameword</li>\n<li>虚拟化技术</li>\n<li>插件机制</li>\n</ul>\n<h2 id=\"汉化APK\"><a href=\"#汉化APK\" class=\"headerlink\" title=\"汉化APK\"></a>汉化APK</h2><p>开发者助手定位字符资源，MT管理器全局搜索字符串进行翻译修改即可</p>\n<h1 id=\"三、smali，vip终结者\"><a href=\"#三、smali，vip终结者\" class=\"headerlink\" title=\"三、smali，vip终结者\"></a>三、smali，vip终结者</h1><p>工具：</p>\n<ul>\n<li><p>教程Demo（更新）</p>\n</li>\n<li><p>MT管理器 &#x2F; NP管理器</p>\n</li>\n<li><p>雷电模拟器</p>\n</li>\n<li><p>jadx</p>\n</li>\n<li><p>核心破解（激活Xposed模块）</p>\n</li>\n</ul>\n<h2 id=\"分析smali代码\"><a href=\"#分析smali代码\" class=\"headerlink\" title=\"分析smali代码\"></a>分析smali代码</h2><pre class=\"line-numbers language-smail\" data-language=\"smail\"><code class=\"language-smail\">&#x2F;&#x2F;一个私有、静态、不可变的方法   方法名\n.method private static final onCreate$lambda-2(Lkotlin&#x2F;jvm&#x2F;internal&#x2F;Ref$IntRef;Lcom&#x2F;zj&#x2F;wuaipojie&#x2F;ui&#x2F;ChallengeSecond;Landroid&#x2F;widget&#x2F;ImageView;Landroid&#x2F;widget&#x2F;ImageView;Landroid&#x2F;widget&#x2F;ImageView;Landroid&#x2F;view&#x2F;View;)Z &#x2F;&#x2F;(这里面是方法的参数)这里是方法返回值类型，表示布尔值类型，返回假或真\n    .registers 7  &#x2F;&#x2F;寄存器数量\n\n    .line 33  &#x2F;&#x2F;代码所在的行数\n    iget p0, p0, Lkotlin&#x2F;jvm&#x2F;internal&#x2F;Ref$IntRef;-&gt;element:I  &#x2F;&#x2F;读取p0(第一个参数，参考寄存器知识)中element的值赋值给p0\n\n    const&#x2F;4 p5, 0x1  &#x2F;&#x2F;p5赋值1\n\n    const&#x2F;16 v0, 0xa &#x2F;&#x2F;v0赋值10，在16进制里a表示10\n\n    if-ge p0, v0, :cond_15  &#x2F;&#x2F;判断p0的值是否大于或等于v0的值(即p0的值是否大于或等于10)，如果大于或等于则跳转到:cond_15\n\n    .line 34  &#x2F;&#x2F;以下是常见的Toast弹窗代码\n    check-cast p1, Landroid&#x2F;content&#x2F;Context; &#x2F;&#x2F;检查Context对象引用\n\n    const-string p0, &quot;请先获取10个硬币哦&quot; &#x2F;&#x2F;弹窗文本信息，把&quot;&quot;里的字符串数据赋值给p0\n\n    check-cast p0, Ljava&#x2F;lang&#x2F;CharSequence; &#x2F;&#x2F;检查CharSequence对象引用\n\n    invoke-static &#123;p1, p0, p5&#125;, Landroid&#x2F;widget&#x2F;Toast;-&gt;makeText(Landroid&#x2F;content&#x2F;Context;Ljava&#x2F;lang&#x2F;CharSequence;I)Landroid&#x2F;widget&#x2F;Toast; \n    &#x2F;&#x2F;将弹窗文本、显示时间等信息传给p1\n\n    move-result-object p0  &#x2F;&#x2F;结果传递给p0\n\n    invoke-virtual &#123;p0&#125;, Landroid&#x2F;widget&#x2F;Toast;-&gt;show()V  &#x2F;&#x2F;当看到这个Toast;-&gt;show你就应该反应过来这里是弹窗代码\n\n    goto :goto_31  &#x2F;&#x2F;跳转到:goto_31\n\n    :cond_15 &#x2F;&#x2F;跳转的一个地址\n\n    invoke-virtual &#123;p1&#125;, Lcom&#x2F;zj&#x2F;wuaipojie&#x2F;ui&#x2F;ChallengeSecond;-&gt;isvip()Z  &#x2F;&#x2F;判断isvip方法的返回值是否为真(即结果是否为1)\n\n    move-result p0  &#x2F;&#x2F;结果赋值给p0\n\n    if-eqz p0, :cond_43 &#x2F;&#x2F;如果结果为0则跳转cond_43地址\n\n    const p0, 0x7f0d0018  &#x2F;&#x2F;在arsc中的id索引，这个值可以进行查询\n\n    .line 37\n    invoke-virtual &#123;p2, p0&#125;, Landroid&#x2F;widget&#x2F;ImageView;-&gt;setImageResource(I)V &#x2F;&#x2F;设置图片资源\n\n    const p0, 0x7f0d0008\n\n    .line 38\n    invoke-virtual &#123;p3, p0&#125;, Landroid&#x2F;widget&#x2F;ImageView;-&gt;setImageResource(I)V\n\n    const p0, 0x7f0d000a\n\n    .line 39\n    invoke-virtual &#123;p4, p0&#125;, Landroid&#x2F;widget&#x2F;ImageView;-&gt;setImageResource(I)V\n\n    .line 40\n    sget-object p0, Lcom&#x2F;zj&#x2F;wuaipojie&#x2F;util&#x2F;SPUtils;-&gt;INSTANCE:Lcom&#x2F;zj&#x2F;wuaipojie&#x2F;util&#x2F;SPUtils; \n\n    check-cast p1, Landroid&#x2F;content&#x2F;Context;\n\n    const&#x2F;4 p2, 0x2 &#x2F;&#x2F;p2赋值2\n\n    const-string p3, &quot;level&quot; &#x2F;&#x2F;sp的索引\n\n    invoke-virtual &#123;p0, p1, p3, p2&#125;, Lcom&#x2F;zj&#x2F;wuaipojie&#x2F;util&#x2F;SPUtils;-&gt;saveInt(Landroid&#x2F;content&#x2F;Context;Ljava&#x2F;lang&#x2F;String;I)V &#x2F;&#x2F;写入数据\n\n    goto :goto_50 &#x2F;&#x2F;跳转地址\n\n    :cond_43\n\n    check-cast p1, Landroid&#x2F;content&#x2F;Context;\n\n    const-string p0, &quot;\\u8bf7\\u5148\\u5145\\u503c\\u5927\\u4f1a\\u5458\\u54e6\\uff01&quot; &#x2F;&#x2F;请先充值大会员哦！\n\n    check-cast p0, Ljava&#x2F;lang&#x2F;CharSequence;\n\n    invoke-static &#123;p1, p0, p5&#125;, Landroid&#x2F;widget&#x2F;Toast;-&gt;makeText(Landroid&#x2F;content&#x2F;Context;Ljava&#x2F;lang&#x2F;CharSequence;I)Landroid&#x2F;widget&#x2F;Toast;\n\n    move-result-object p0\n\n    invoke-virtual &#123;p0&#125;, Landroid&#x2F;widget&#x2F;Toast;-&gt;show()V\n\n    :goto_50\n    return p5  &#x2F;&#x2F;返回p5的值\n.end method &#x2F;&#x2F;方法结束\n\n&#x2F;&#x2F;判断是否是大会员的方法\n.method public final isvip()Z\n    .registers 2\n\n    const&#x2F;4 v0, 0x0 &#x2F;&#x2F;v0赋值0\n\n    return v0 &#x2F;&#x2F;返回v0的值\n\n.end method</code></pre>\n\n\n\n<h1 id=\"四、广告-弹窗静默卡\"><a href=\"#四、广告-弹窗静默卡\" class=\"headerlink\" title=\"四、广告&amp;弹窗静默卡\"></a>四、广告&amp;弹窗静默卡</h1><p>工具：</p>\n<ul>\n<li><p>教程Demo（更新）</p>\n</li>\n<li><p>MT管理器 &#x2F; NP管理器</p>\n</li>\n<li><p>算法助手</p>\n</li>\n<li><p>雷电模拟器</p>\n</li>\n<li><p>jadx</p>\n</li>\n<li><p>开发助手</p>\n</li>\n</ul>\n<p>广告类型：</p>\n<ul>\n<li>启动广告</li>\n<li>弹窗广告（更新）</li>\n<li>横幅广告</li>\n</ul>\n<p>安卓四大组件：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">组件</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Activity(活动)</td>\n<td align=\"left\">在应用中的一个Activity可以用来表示一个界面，意思可以理解为“活动”，即一个活动开始，代表 Activity组件启动，活动结束，代表一个Activity的生命周期结束。一个Android应用必须通过Activity来运行和启动，Activity的生命周期交给系统统一管理。</td>\n</tr>\n<tr>\n<td align=\"left\">Service(服务)</td>\n<td align=\"left\">Service它可以在后台执行长时间运行操作而没有用户界面的应用组件，不依赖任何用户界面，例如后台播放音乐，后台下载文件等。</td>\n</tr>\n<tr>\n<td align=\"left\">Broadcast Receiver(广播接收器)</td>\n<td align=\"left\">一个用于接收广播信息，并做出对应处理的组件。比如我们常见的系统广播：通知时区改变、电量低、用户改变了语言选项等。</td>\n</tr>\n<tr>\n<td align=\"left\">Content Provider(内容提供者)</td>\n<td align=\"left\">作为应用程序之间唯一的共享数据的途径，Content Provider主要的功能就是存储并检索数据以及向其他应用程序提供访问数据的接口。Android内置的许多数据都是使用Content Provider形式，供开发者调用的（如视频，音频，图片，通讯录等）</td>\n</tr>\n</tbody></table>\n<p>Activity生命周期：</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">函数名称</th>\n<th align=\"left\">描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">onCreate()</td>\n<td align=\"left\">一个Activity启动后第一个被调用的函数，常用来在此方法中进行Activity的一些初始化操作。例如创建View，绑定数据，注册监听，加载参数等。</td>\n</tr>\n<tr>\n<td align=\"left\">onStart()</td>\n<td align=\"left\">当Activity显示在屏幕上时，此方法被调用但此时还无法进行与用户的交互操作。</td>\n</tr>\n<tr>\n<td align=\"left\">onResume()</td>\n<td align=\"left\">这个方法在onStart()之后调用，也就是在Activity准备好与用户进行交互的时候调用，此时的Activity一定位于Activity栈顶，处于运行状态。</td>\n</tr>\n<tr>\n<td align=\"left\">onPause()</td>\n<td align=\"left\">这个方法是在系统准备去启动或者恢复另外一个Activity的时候调用，通常在这个方法中执行一些释放资源的方法，以及保存一些关键数据。</td>\n</tr>\n<tr>\n<td align=\"left\">onStop()</td>\n<td align=\"left\">这个方法是在Activity完全不可见的时候调用的。</td>\n</tr>\n<tr>\n<td align=\"left\">onDestroy()</td>\n<td align=\"left\">这个方法在Activity销毁之前调用，之后Activity的状态为销毁状态。</td>\n</tr>\n<tr>\n<td align=\"left\">onRestart()</td>\n<td align=\"left\">当Activity从停止stop状态恢进入start状态时调用状态。</td>\n</tr>\n</tbody></table>\n<h2 id=\"启动广告\"><a href=\"#启动广告\" class=\"headerlink\" title=\"启动广告\"></a>启动广告</h2><p>修改方法：</p>\n<ul>\n<li><p>修改加载时间</p>\n<p>  根据MT管理器Activity记录找到对应Activity的逻辑，找到广告加载时间并修改为0</p>\n</li>\n<li><p>修改Activity（不稳定）</p>\n<p>  修改Activity的切换</p>\n</li>\n</ul>\n<h2 id=\"弹窗广告\"><a href=\"#弹窗广告\" class=\"headerlink\" title=\"弹窗广告\"></a>弹窗广告</h2><ul>\n<li><p>修改AndroidMainfest.xml中的versiocode</p>\n</li>\n<li><p>Hook弹窗(算法助手开启弹窗定位)</p>\n</li>\n<li><p>修改dex弹窗代码</p>\n</li>\n<li><p>抓包修改响应体(也可以路由器拦截)</p>\n</li>\n</ul>\n<h2 id=\"横幅广告\"><a href=\"#横幅广告\" class=\"headerlink\" title=\"横幅广告\"></a>横幅广告</h2><p>开发者助手定位图片资源，根据资源id定位到layout文件修改宽高或者对其资源添加如下隐藏属性</p>\n<p><code>android:visibility=&quot;gone&quot;</code></p>\n<h1 id=\"五、动态调试-Log\"><a href=\"#五、动态调试-Log\" class=\"headerlink\" title=\"五、动态调试&amp;Log\"></a>五、动态调试&amp;Log</h1><p>工具：</p>\n<ul>\n<li><p>教程Demo</p>\n</li>\n<li><p>MT管理器 &#x2F; NP管理器</p>\n</li>\n<li><p>jeb</p>\n</li>\n<li><p>雷电模拟器</p>\n</li>\n<li><p>XappDebug</p>\n</li>\n</ul>\n<h2 id=\"动态调试\"><a href=\"#动态调试\" class=\"headerlink\" title=\"动态调试\"></a>动态调试</h2><ol>\n<li><p>修改debug权限</p>\n<p> 方法一：在AndroidManifest.xml里添加可调试权限</p>\n<p> <code>android:debuggable=&quot;true&quot;</code></p>\n<p> 方法二：XappDebug模块hook对应的app</p>\n<p> <a href=\"https://github.com/Palatis/XAppDebug\">XappDebug</a></p>\n</li>\n<li><p>端口转发以及开启adb权限</p>\n<p> 雷电模拟器自带端口转发，夜神模拟器：adb connect 127.0.0.1:62001</p>\n<p> 版本号点击七次开启开发者模式并开启adb调试权限</p>\n</li>\n<li><p>下断点</p>\n<p> 在对应的smali代码ctrl+b下断点</p>\n</li>\n<li><p>debug模式启动</p>\n<p> <code>adb shell am start -D -n com.zj.wuaipojie/.ui.MainActivity</code></p>\n</li>\n</ol>\n<h2 id=\"Log插桩\"><a href=\"#Log插桩\" class=\"headerlink\" title=\"Log插桩\"></a>Log插桩</h2><p>定义：Log插桩指的是反编译APK文件时，在对应的smali文件里，添加相应的smali代码，将程序中的关键信息，以log日志的形式进行输出。</p>\n<p>调用命令</p>\n<pre class=\"line-numbers language-smali\" data-language=\"smali\"><code class=\"language-smali\">invoke-static &#123;对应寄存器&#125;, Lcom&#x2F;mtools&#x2F;LogUtils;-&gt;v(Ljava&#x2F;lang&#x2F;Object;)V</code></pre>\n\n\n\n<h1 id=\"六、签名校验对抗、IO重定向\"><a href=\"#六、签名校验对抗、IO重定向\" class=\"headerlink\" title=\"六、签名校验对抗、IO重定向\"></a>六、签名校验对抗、IO重定向</h1><p>工具：</p>\n<ul>\n<li><p>教程Demo（更新）</p>\n</li>\n<li><p>MT管理器 &#x2F; NP管理器</p>\n</li>\n<li><p>雷电模拟器</p>\n</li>\n<li><p>jadx</p>\n</li>\n<li><p>算法助手</p>\n</li>\n</ul>\n<p>Android 目前支持以下四种应用签名方案：<br>v1 方案：基于 JAR 签名。<br>v2 方案：APK 签名方案 v2（在 Android 7.0 中引入）<br>v3 方案：APK 签名方案 v3（在 Android 9 中引入）<br>v4 方案：APK 签名方案 v4（在 Android 11 中引入）</p>\n<h2 id=\"签名校验对抗\"><a href=\"#签名校验对抗\" class=\"headerlink\" title=\"签名校验对抗\"></a>签名校验对抗</h2><p>方法一：核心破解插件，不签名安装应用<br>方法二：一键过签名工具，例如MT、NP、ARMPro、CNFIX、Modex的去除签名校验功能<br>方法三：具体分析签名校验逻辑(手撕签名校验)<br>方法四：io重定向–VA&amp;SVC：ptrace+seccomp<br><a href=\"https://bbs.pediy.com/thread-273160.htm\">SVC的TraceHook沙箱的实现&amp;无痕Hook实现思路</a></p>\n<h2 id=\"IO重定向\"><a href=\"#IO重定向\" class=\"headerlink\" title=\"IO重定向\"></a>IO重定向</h2><h1 id=\"七、Hook、Xposed模块（上）\"><a href=\"#七、Hook、Xposed模块（上）\" class=\"headerlink\" title=\"七、Hook、Xposed模块（上）\"></a>七、Hook、Xposed模块（上）</h1><p>工具：</p>\n<ul>\n<li><p>教程Demo（更新）</p>\n</li>\n<li><p>jadx</p>\n</li>\n<li><p>雷电模拟器</p>\n</li>\n<li><p>Android Studio</p>\n</li>\n</ul>\n<h1 id=\"未完待续\"><a href=\"#未完待续\" class=\"headerlink\" title=\"未完待续\"></a>未完待续</h1>","feature":true,"text":"吾爱破解安卓逆向入门教程《安卓逆向这档事》学习笔记...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"Learn","slug":"Learn","count":3,"path":"api/categories/Learn.json"}],"tags":[{"name":"reverse","slug":"reverse","count":5,"path":"api/tags/reverse.json"},{"name":"android","slug":"android","count":1,"path":"api/tags/android.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%A8%A1%E6%8B%9F%E5%99%A8%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA\"><span class=\"toc-text\">一、模拟器环境搭建</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81APK%E6%96%87%E4%BB%B6%E7%BB%93%E6%9E%84%E3%80%81%E5%8F%8C%E5%BC%80%E3%80%81%E6%B1%89%E5%8C%96%E3%80%81%E5%9F%BA%E7%A1%80%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">二、APK文件结构、双开、汉化、基础修改</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#APK%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">APK结构</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%8C%E5%BC%80%E5%8F%8A%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">双开及原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B1%89%E5%8C%96APK\"><span class=\"toc-text\">汉化APK</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81smali%EF%BC%8Cvip%E7%BB%88%E7%BB%93%E8%80%85\"><span class=\"toc-text\">三、smali，vip终结者</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%9E%90smali%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">分析smali代码</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E5%B9%BF%E5%91%8A-%E5%BC%B9%E7%AA%97%E9%9D%99%E9%BB%98%E5%8D%A1\"><span class=\"toc-text\">四、广告&amp;弹窗静默卡</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%AF%E5%8A%A8%E5%B9%BF%E5%91%8A\"><span class=\"toc-text\">启动广告</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%B9%E7%AA%97%E5%B9%BF%E5%91%8A\"><span class=\"toc-text\">弹窗广告</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A8%AA%E5%B9%85%E5%B9%BF%E5%91%8A\"><span class=\"toc-text\">横幅广告</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95-Log\"><span class=\"toc-text\">五、动态调试&amp;Log</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">动态调试</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Log%E6%8F%92%E6%A1%A9\"><span class=\"toc-text\">Log插桩</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81%E7%AD%BE%E5%90%8D%E6%A0%A1%E9%AA%8C%E5%AF%B9%E6%8A%97%E3%80%81IO%E9%87%8D%E5%AE%9A%E5%90%91\"><span class=\"toc-text\">六、签名校验对抗、IO重定向</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%BE%E5%90%8D%E6%A0%A1%E9%AA%8C%E5%AF%B9%E6%8A%97\"><span class=\"toc-text\">签名校验对抗</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#IO%E9%87%8D%E5%AE%9A%E5%90%91\"><span class=\"toc-text\">IO重定向</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%83%E3%80%81Hook%E3%80%81Xposed%E6%A8%A1%E5%9D%97%EF%BC%88%E4%B8%8A%EF%BC%89\"><span class=\"toc-text\">七、Hook、Xposed模块（上）</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%9C%AA%E5%AE%8C%E5%BE%85%E7%BB%AD\"><span class=\"toc-text\">未完待续</span></a></li></ol>","author":{"name":"y9nhjy","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/73747088?v=4","link":"https://y9nhjy.github.io","description":"手握日月摘星辰","socials":{"github":"https://github.com/y9nhjy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_51280668","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"驱动学习","uid":"5f67e632213bd55031341ddc1c06ff9c","slug":"20231019-Driver-Learning","date":"2023-10-19T07:50:00.000Z","updated":"2023-10-19T13:18:49.981Z","comments":true,"path":"api/articles/20231019-Driver-Learning.json","keywords":null,"cover":[],"text":"Windows驱动学习笔记...","link":"","photos":[],"count_time":{"symbolsCount":607,"symbolsTime":"1 mins."},"categories":[{"name":"Learn","slug":"Learn","count":3,"path":"api/categories/Learn.json"}],"tags":[{"name":"driver","slug":"driver","count":1,"path":"api/tags/driver.json"}],"author":{"name":"y9nhjy","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/73747088?v=4","link":"https://y9nhjy.github.io","description":"手握日月摘星辰","socials":{"github":"https://github.com/y9nhjy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_51280668","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"Proxifier注册机","uid":"f4299006905b671658e489a5612f0ab4","slug":"20230816-Proxifier-Keygen","date":"2023-08-16T03:00:00.000Z","updated":"2023-09-15T04:33:17.505Z","comments":true,"path":"api/articles/20230816-Proxifier-Keygen.json","keywords":null,"cover":[],"text":"Proxifier注册机编写过程...","link":"","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[{"name":"Keygen","slug":"Keygen","count":1,"path":"api/categories/Keygen.json"}],"tags":[{"name":"reverse","slug":"reverse","count":5,"path":"api/tags/reverse.json"},{"name":"keygen","slug":"keygen","count":1,"path":"api/tags/keygen.json"}],"author":{"name":"y9nhjy","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/73747088?v=4","link":"https://y9nhjy.github.io","description":"手握日月摘星辰","socials":{"github":"https://github.com/y9nhjy","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_51280668","juejin":"","customs":{}}},"feature":true}}